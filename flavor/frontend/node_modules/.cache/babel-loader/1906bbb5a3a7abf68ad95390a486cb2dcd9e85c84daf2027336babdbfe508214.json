{"ast":null,"code":"var _jsxFileName = \"/Users/sn0wbreeze/Projects/Flavor/flavor/frontend/src/categories/TV.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TV = () => {\n  _s();\n  const [tvShows, setTvShows] = useState([]);\n  useEffect(() => {\n    const backendUrl = process.env.REACT_APP_BACKEND_URL;\n    const fetchTvShows = async () => {\n      try {\n        const response = await axios.get(`${backendUrl}/api/tv/top-tv`);\n        setTvShows(response.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchTvShows();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Top TV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tvShows.map(show => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: show.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: show.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Rating: \", show.voteAverage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), show.posterPath && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: show.posterPath,\n          alt: \"TV Show Poster\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Release Date: \", show.releaseDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, show.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(TV, \"MEPPp7Rk+ooXqXJdZR7lhY2qH/w=\");\n_c = TV;\nexport default TV;\nvar _c;\n$RefreshReg$(_c, \"TV\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TV","_s","tvShows","setTvShows","backendUrl","process","env","REACT_APP_BACKEND_URL","fetchTvShows","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","show","title","overview","voteAverage","posterPath","src","alt","releaseDate","id","_c","$RefreshReg$"],"sources":["/Users/sn0wbreeze/Projects/Flavor/flavor/frontend/src/categories/TV.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst TV = () => {\n  const [tvShows, setTvShows] = useState([]);\n\n  useEffect(() => {\n    const backendUrl = process.env.REACT_APP_BACKEND_URL;\n\n    const fetchTvShows = async () => {\n      try {\n        const response = await axios.get(`${backendUrl}/api/tv/top-tv`);\n        setTvShows(response.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchTvShows();\n  }, []);\n\n  return (\n    <div>\n      <h1>Top TV</h1>\n      <ul>\n        {tvShows.map(show => (\n          <li key={show.id}>\n            <h2>{show.title}</h2>\n            <p>{show.overview}</p>\n            <p>Rating: {show.voteAverage}</p>\n            {show.posterPath && <img src={show.posterPath} alt=\"TV Show Poster\" />}\n            <p>Release Date: {show.releaseDate}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TV;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,EAAE,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd,MAAMQ,UAAU,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB;IAEpD,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,GAAGN,UAAU,gBAAgB,CAAC;QAC/DD,UAAU,CAACM,QAAQ,CAACE,IAAI,CAAC;MAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDJ,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACfnB,OAAA;MAAAe,QAAA,EACGZ,OAAO,CAACiB,GAAG,CAACC,IAAI,iBACfrB,OAAA;QAAAe,QAAA,gBACEf,OAAA;UAAAe,QAAA,EAAKM,IAAI,CAACC;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBnB,OAAA;UAAAe,QAAA,EAAIM,IAAI,CAACE;QAAQ;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtBnB,OAAA;UAAAe,QAAA,GAAG,UAAQ,EAACM,IAAI,CAACG,WAAW;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAChCE,IAAI,CAACI,UAAU,iBAAIzB,OAAA;UAAK0B,GAAG,EAAEL,IAAI,CAACI,UAAW;UAACE,GAAG,EAAC;QAAgB;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACtEnB,OAAA;UAAAe,QAAA,GAAG,gBAAc,EAACM,IAAI,CAACO,WAAW;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GALhCE,IAAI,CAACQ,EAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACjB,EAAA,CAlCID,EAAE;AAAA6B,EAAA,GAAF7B,EAAE;AAoCR,eAAeA,EAAE;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}